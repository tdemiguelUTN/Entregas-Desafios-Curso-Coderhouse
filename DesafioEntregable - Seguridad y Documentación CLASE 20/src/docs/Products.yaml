paths:
  /api/products:
    get:
      summary: Get all products
      tags:
        - Products
      parameters:
        - in: query
          name: limit
          description: Number of items per page
          schema:
            type: integer
            format: int32
          required: false
        - in: query
          name: page
          description: Page number
          schema:
            type: integer
            format: int32
          required: false
        - in: query
          name: sort
          description: Sort order (asc, desc)
          schema:
            type: string
          required: false
        - in: query
          name: stock
          description: Filter by stock
          schema:
            type: integer
            format: int32
          required: false
      responses:
        '200':
          description: Products found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '404':
          description: Products not found
        '500':
          description: Internal server error
    post:
      summary: Product created
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/requestBodies/createProduct'
            example:
              name: "Product Name"
              price: 10.99
      responses:
        '200':
          description: Successfully created product 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: All the fields are required
        '500': 
          description: Internal server error

  /api/products/{pId}:
    get:
      summary: Get a product by ID
      tags:
        - Products
      parameters:
        - name: pId
          in: path
          required: true
          description: The ID of the product to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Product found by ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
              example:
                _id: 507f1f77bcf86cd799439011
                name: "Product Name"
                price: 10.99
                stock: 10
                description: "Product Description"
                owner: leomessi@gmail.com
        '404':
          description: Product not found
        '500':
          description: Internal server error
    put:
      summary: Update a product by ID
      tags:
        - Products
      parameters:
        - name: pId
          in: path
          required: true
          description: The ID of the product to update
          schema:
            type: string
      responses:
        '200':
          description: Product updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: ID is required  
        '404': 
          description: Product not found
        '500': 
          description: Internal server error
    delete:
      summary: Delete a product by ID
      tags:
        - Products
      parameters:
        - name: pId 
          in: path
          required: true
          description: The ID of the product to delete
          schema:
            type: string
      responses:
        '200':
          description: Successfully deleted product
        '404': 
          description: Product not found
        '500':  
          description: Internal server error
  
  /api/products/mocking/products:
    get:
      summary: Generate random products
      tags:
        - Products
      responses:
        '200':
          description: Successfully generated products randomly
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '500':  
          description: Internal server error 

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the product generated by MongoDB.
        name:
          type: string
          description: The name of the product.
        price:
          type: number
          description: The price of the product.
        stock:
          type: integer
          description: The stock of the product.
          default: 0
        description:
          type: string
          description: The description of the product.
        owner:
          type: string
          description: Email of the owner.
      example:
          _id: 507f1f77bcf86cd799439011
          name: "Product Name"
          price: 10.99
          stock: 10
          description: "Product Description"
          owner: leomessi@gmail.com

  requestBodies:
    createProduct:
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                description: The name of the product.
              price:
                type: number
                description: The price of the product.

